Time complexity: O(n)
Space complexity: O(n)
Did this code successfully submitted on leetcode: Yes

class Solution {
    public int[] exclusiveTime(int n, List<String> logs) {
        int[] res = new int[n];
        int prev = 0;
        Stack<Integer> stack = new Stack<>();
        
        for(String log : logs){
            String[] s = log.split(":");
            
            if(!stack.isEmpty())
                res[stack.peek()] += Integer.parseInt(s[2]) - prev;
            
            prev = Integer.parseInt(s[2]);
            
            if(s[1].equals("start"))
                stack.push(Integer.parseInt(s[0]));
            else{
                res[stack.pop()]++;
                prev++;
            }
        }
        return res;
    }
}
