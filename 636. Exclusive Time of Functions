class Solution {
    public int[] exclusiveTime(int n, List<String> logs)
    {
          int [] result = new int [n];
        
        if(logs == null || logs.size() == 0)
        {
            return new int [n];
        }
        
        Stack<Integer> st =  new Stack<>();
        int prev = 0;
        
        for(String log: logs)
        {
            String [] strArr = log.split(":") ; //[0:start:0]
                int curr = Integer.parseInt(strArr[2]); //current timestamp
            
            if(strArr[1].equals("start") )
            {
                if(!st.isEmpty())
            {
                result[st.peek()] += curr - prev;
            }
                 st.push(Integer.parseInt(strArr[0]));
            prev = curr;
        }   
             else
        {
            result[st.pop() ] += curr-prev+1;
                 prev = curr +1;
        }
           
        }
        
       return result;
      
    }
}

//Time : O(n)
//space : O(n)
